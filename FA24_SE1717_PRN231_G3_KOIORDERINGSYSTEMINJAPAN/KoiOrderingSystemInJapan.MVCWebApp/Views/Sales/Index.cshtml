<div class="row">
    <div class="col-md-10">
        <h3 class="display-8">Sale List</h3>
    </div>
    <div class="text-end col-md-2">
        <button type="button" class="btn btn-primary" onclick="add();">
            Add New
        </button>
    </div>
</div>

<!--Filter&Search-->
<div class="my-3">
    <h4 class="display-8">Filter&Search</h4>
    <div class="row">
        <div class="col-md-3 form-group flex-fill">
            <input type="text" class="form-control" id="proposalDetails" placeholder="Proposal details">
        </div>
        <div class="col-md-3 form-group flex-fill">
            <input type="number" class="form-control" id="totalPrice" placeholder="Total price">
        </div>
        <div class="col-md-3 form-group flex-fill">
            <select id="status" class="form-control">
                <option value="">--Status--</option>
                <option value="0">Pending</option>
                <option value="1">Approved</option>
                <option value="2">Rejected</option>
            </select>
        </div>
        <div class="col-md-3 form-group flex-fill">
            <input type="text" class="form-control" id="responseBy" placeholder="Response by">
        </div>
    </div>

    <div class="row mt-2">
        <div class="col-md-4">
            <div>Response date</div>
            <div class="form-group flex-fill">
                <input type="date" class="form-control" id="responseDate" placeholder="Response date">
            </div>
        </div>

        <div class="col-md-4">
            <div>Created date</div>
            <div class="form-group flex-fill">
                <input type="date" class="form-control" id="createdDate" placeholder="Created date">
            </div>
        </div>

        <div class="col-md-4">
            <div>Updated date</div>
            <div class="form-group flex-fill">
                <input type="date" class="form-control" id="updatedDate" placeholder="Updated date">
            </div>
        </div>
    </div>
    <div>
        <button type="button" class="btn btn-outline-dark px-4 py-2 mt-2" onclick="resetData(); loadData(1);">Reset</button>
        <button type="button" class="btn btn-dark px-4 py-2 mt-2" onclick="loadData(1)">Search</button>
    </div>
</div>

<!--List-->
<div class="row">
    <div class="col-md-12">
        <table class="table table-striped table-bordered table-hover">
            <thead>
                <tr class="card-header">
                    <th class="card-title text-center">Sale staff</th>
                    <th class="card-title text-center">Proposal details</th>
                    <th class="card-title text-center">Total price</th>
                    <th class="card-title text-center">Status</th>
                    <th class="card-title text-center">Response date</th>
                    <th class="card-title text-center">Response by</th>
                    <th class="card-title text-center">Note</th>
                    <th class="card-title text-center"></th>
                </tr>
            </thead>
            <tbody class="tblSales">
            </tbody>
        </table>
        <div class="d-flex justify-content-center align-items-center text-center ">
            <button class="btn btn-light" id="prevPage" onclick="loadData(currentPage - 1)" disabled>Previous</button>
            <span id="currentPageLabel">Page 1</span>
            <button class="btn btn-light" id="nextPage" onclick="loadData(currentPage + 1)">Next</button>
        </div>
    </div>
</div>

<!--Modal detail-->
<div class="modal fade" id="saleModalView" tabindex="-1" aria-labelledby="saleModalViewLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="saleModalViewLabel">Sale Details</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <label><strong>Sale Staff:</strong></label>
                        <p id="saleStaffDetail"></p>
                    </div>
                    <div class="col-md-6">
                        <label><strong>Proposal Details:</strong></label>
                        <p id="proposalDetailsDetail"></p>
                    </div>
                    <div class="col-md-6">
                        <label><strong>Total Price:</strong></label>
                        <p id="totalPriceDetail"></p>
                    </div>
                    <div class="col-md-6">
                        <label><strong>Status:</strong></label>
                        <p id="statusDetail"></p>
                    </div>
                    <div class="col-md-6">
                        <label><strong>Response By:</strong></label>
                        <p id="responseByDetail"></p>
                    </div>
                    <div class="col-md-6">
                        <label><strong>Response Date:</strong></label>
                        <p id="responseDateDetail"></p>
                    </div>
                    <div class="col-md-6">
                        <label><strong>Created by:</strong></label>
                        <p id="createdByDetail"></p>
                    </div>
                    <div class="col-md-6">
                        <label><strong>Created date:</strong></label>
                        <p id="createdDateDetail"></p>
                    </div>
                    <div class="col-md-6">
                        <label><strong>Updated by:</strong></label>
                        <p id="updatedByDetail"></p>
                    </div>
                    <div class="col-md-6">
                        <label><strong>Updated date:</strong></label>
                        <p id="updatedDateDetail"></p>
                    </div>
                    <div class="col-md-6">
                        <label><strong>Note:</strong></label>
                        <p id="noteDetail"></p>
                    </div>
                    <div class="col-md-6">
                        <label><strong>Deleted:</strong></label>
                        <p id="isDeletedDetail"></p>
                    </div>
                </div>
                <div class="row">
                    <label><strong>Booking Request Information</strong></label>
                    <div class="col-md-6">
                        <label><strong>Customer Name:</strong></label>
                        <p id="customerNameDetail"></p>
                    </div>
                    <div class="col-md-6">
                        <label><strong>Travel name:</strong></label>
                        <p id="travelNameDetail"></p>
                    </div>
                    <div class="col-md-6">
                        <label><strong>Quantity service:</strong></label>
                        <p id="quantityServiceDetail"></p>
                    </div>
                    <div class="col-md-6">
                        <label><strong>Number of people:</strong></label>
                        <p id="numberOfPersonDetail"></p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!--Modal add-->
<div class="modal" id="saleModalAdd" tabindex="-1" aria-labelledby="saleModelLabelAdd" aria-hidden="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="saleModalLabel">Sale</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="bookingRequestIdAdd" />
                    <label for="bookingRequest">Booking request</label>
                    <div id="bookingRequestCardsAdd" class="row overflow-auto" style="max-height: 200px; overflow-y: auto; padding: 10px; border: 1px solid #dee2e6; border-radius: 5px;">
                        <!-- Các card sẽ được thêm động từ JavaScript -->
                    </div>
                    <div class="col-md-6">
                        <label for="saleStaff">Sale staff</label>
                        <select id="saleStaffIdAdd" name="saleStaffId" class="form-select">
                            <!-- Các option sẽ được thêm động từ JavaScript -->
                        </select>

                    </div>
                    <div class="col-md-6">
                        <label for="1">Proposal details</label>
                        <input type="text" id="proposalDetailsAdd" name="proposalDetails" class="form-control" />
                    </div>
                    <div class="col-md-6">
                        <label for="1">Total price</label>
                        <input type="text" id="totalPriceAdd" name="totalPrice" class="form-control" />
                    </div>
                    <div class="col-md-6">
                        <label for="1">Status</label>
                        <select id="statusAdd" name="status" class="form-control">
                            <option value="0">Pending</option>
                            <option value="1">Approve</option>
                            <option value="2">Reject</option>
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label for="1">Response date</label>
                        <input type="date" id="responseDateAdd" name="responseDate" class="form-control" />
                    </div>
                    <div class="col-md-6">
                        <label for="1"> Response by</label>
                        <select id="responseByAdd" name="responseBy" class="form-select">
                            <!-- Các option sẽ được thêm động từ JavaScript -->
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label for="1">Note</label>
                        <input type="text" id="noteAdd" name="note" class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btSaveAddSale" type="button" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            }
        </div>
    </div>
</div>

<!--Modal update-->
<div class="modal" id="saleModalUpdate" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update Sale</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="saleId" />
                <input type="hidden" id="bookingRequestIdUpdate" />
                <input type="hidden" id="createdDateUpdate" />
                <label for="bookingRequest">Booking request</label>
                <div id="bookingRequestCardsUpdate" class="row overflow-auto" style="max-height: 200px; overflow-y: auto; padding: 10px; border: 1px solid #dee2e6; border-radius: 5px;">
                    <!-- Các card sẽ được thêm động từ JavaScript -->
                </div>
                <div class="col-md-6">
                    <label for="saleStaff">Sale staff</label>
                    <select id="saleStaffIdUpdate" name="saleStaffId" class="form-select">
                        <!-- Các option sẽ được thêm động từ JavaScript -->
                    </select>
                </div>
                <div class="col-md-6">
                    <label for="1">Proposal details</label>
                    <input type="text" id="proposalDetailsUpdate" name="proposalDetails" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label for="1">Total price</label>
                    <input type="text" id="totalPriceUpdate" name="totalPrice" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label for="1">Status</label>
                    <select id="statusUpdate" name="status" class="form-control">
                        <option value="0">Pending</option>
                        <option value="1">Approve</option>
                        <option value="2">Reject</option>
                    </select>
                </div>
                <div class="col-md-6">
                    <label for="1">Response date</label>
                    <input type="date" id="responseDateUpdate" name="responseDate" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label for="1"> Response by</label>
                    <select id="responseByUpdate" name="responseBy" class="form-select">
                        <!-- Các option sẽ được thêm động từ JavaScript -->
                    </select>
                </div>
                <div class="col-md-6">
                    <label for="1">Note</label>
                    <input type="text" id="noteUpdate" name="note" class="form-control" />
                </div>
            </div>
            <div class="modal-footer">
                <button id="btSaveUpdateSale" type="button" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            loadData(1);
        });

        function loadData(page) {
            currentPage = page;

            var data = {
                ProposalDetails: $('#proposalDetails').val() || null,
                TotalPrice: $('#totalPrice').val() || null,
                Status: ($('#status').val() !== null && $('#status').val() !== "") ? parseInt($('#status').val()) : null,
                ResponseDate: $('#responseDate').val() ? new Date($('#responseDate').val()).toISOString() : null,
                ResponseBy: $('#responseBy').val() || null,
                CreatedDate: $('#createdDate').val() ? $('#createdDate').val() + 'T00:00:00Z' : null,
                UpdatedDate: $('#updatedDate').val() ? $('#updatedDate').val() + 'T00:00:00Z' : null,
                Page: currentPage,
                PageSize: 7 // Kích thước trang cố định
            };

            $.ajax({
                url: 'https://localhost:7298/api/Sales/filter',
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                data: JSON.stringify(data),
                success: function (result) {
                    var html = '';
                    $.each(result.data.list, function (key, item) {
                        console.log(item.saleStaff)
                        html += '<tr>';
                        html += '<td>' + item.saleStaff.firstname + " " + item.saleStaff.lastname + '</td>';
                        html += '<td>' + item.proposalDetails + '</td>';
                        html += '<td>' + item.totalPrice + '</td>';
                        html += '<td>' + getStatusText(item.status) + '</td>';
                        html += '<td>' + formatDate(item.responseDate) + '</td>';
                        html += '<td>' + item.responseBy + '</td>';
                        html += '<td>' + item.note + '</td>';
                        // Thêm nút Update và Delete
                        html += `<td>
                                <button class="btn btn-info btn-sm me-2" onclick="viewDetail('${item.id}')">Detail</button>
                                <button class="btn btn-warning btn-sm me-2" onclick="getUpdateSale('${item.id}')">Update</button>
                                <button class="btn btn-danger btn-sm" onclick="deleteSale('${item.id}')">Delete</button></td>`;
                        html += '</tr>';
                    });
                    $('.tblSales').html(html);

                    // Cập nhật trạng thái nút phân trang
                    updatePagination(result.data.totalPages);
                },
                error: function (xhr, error) {
                    alert("load data fail" + xhr.statusText);
                }
            });
        }

        //reset data
        function resetData() {
            $('#proposalDetails').val('');
            $('#totalPrice').val('');
            $('#status').val('');
            $('#responseDate').val('');
            $('#responseBy').val('');
            $('#createdDate').val('');
            $('#updatedDate').val('');
        }

        //Nhan btn detail
        function viewDetail(id) {
            $.ajax({
                url: `https://localhost:7298/api/Sales/get-by-id/${id}`,
                type: "GET",
                success: function (result) {

                    console.log(result);
                    console.log(result.data);
                    if (result.data) {
                        const sale = result.data;
                        const booking = sale.bookingRequest;

                        // Gán dữ liệu của Sale vào các thẻ trong modal
                        $("#saleStaffDetail").text(`${sale.saleStaff.firstname} ${sale.saleStaff.lastname}`);
                        $("#proposalDetailsDetail").text(sale.proposalDetails);
                        $("#totalPriceDetail").text(sale.totalPrice);
                        $("#statusDetail").text(getStatusText(sale.status));
                        $("#responseDateDetail").text(formatDate(sale.responseDate));
                        $("#responseByDetail").text(sale.responseBy);
                        $("#responseDateDetail").text(formatDate(sale.responseDate));
                        $("#createdByDetail").text(sale.createdBy);
                        $("#createdDateDetail").text(formatDate(sale.createdDate));
                        $("#updatedByDetail").text(sale.updatedBy);
                        $("#updatedDateDetail").text(formatDate(sale.updatedDate));
                        $("#noteDetail").text(sale.note);
                        $("#isDeletedDetail").text(sale.isDeleted ? "Yes" : "No");

                        // Gán dữ liệu của BookingRequest vào các thẻ trong modal
                        $("#customerNameDetail").text(`${booking.customer.firstname} ${booking.customer.lastname}`);
                        $("#travelNameDetail").text(booking.travel.name);
                        $("#quantityServiceDetail").text(booking.quantityService);
                        $("#numberOfPersonDetail").text(booking.numberOfPerson);

                        // Hiển thị modal
                        $('#saleModalView').modal('show');
                    } else {
                        alert("Sale not found.");
                    }
                },
                error: function (xhr, error) {
                    console.error("Error fetching sale details:", xhr);
                    alert("Failed to load sale details.");
                }
            });
        }

        //Nhan btn add
        function add() {
            $("#saleModalLabelAdd").html("Add New Sale");
            $('#saleModalAdd').modal('show');
            loadBookingRequestsAdd();
            loadManagerAdd(0, null);
            loadSaleStaffAdd(1, null);
        }

        //Save add
        $("#btSaveAddSale").click(function () {
            const sale = {
                BookingRequestId: $("#bookingRequestIdAdd").val(),
                SaleStaffId: $("#saleStaffIdAdd").val(),
                ProposalDetails: $("#proposalDetailsAdd").val(),
                TotalPrice: $("#totalPriceAdd").val(),
                Status: parseInt($("#statusAdd").val()),
                ResponseDate: $("#responseDateAdd").val(),
                ResponseBy: $("#responseByAdd").val(),
                Note: $("#noteAdd").val(),
            };

            console.log("check_", sale);

            $.ajax({
                type: 'POST',
                url: 'https://localhost:7298/api/Sales',
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(sale),
                success: function (result) {
                    if (result.status >= 1) {
                        $('#saleModalAdd').modal('hide');
                        loadData(1);
                        $("#bookingRequestIdAdd").val('');
                        $("#saleStaffIdAdd").val('');
                        $("#proposalDetailsAdd").val('');
                        $("#totalPriceAdd").val('');
                        $("#statusAdd").val('');
                        $("#responseDateAdd").val('');
                        $("#responseByAdd").val('');
                        $("#noteAdd").val('');
                    }
                    alert(result.message);
                },
                error: function (xhr, error) {
                    console.log(xhr);
                    alert('Error occurred while saving.');
                }
            });
        });

        //Nhan btn update
        function getUpdateSale(id) {
            $.ajax({
                url: `https://localhost:7298/api/Sales/get-by-id/${id}`,
                type: "GET",
                success: function (item) {
                    if (item.data) {
                        $("#saleId").val(item.data.id);
                        $("#bookingRequestIdUpdate").val(item.data.bookingRequestId);
                        $("#saleStaffIdUpdate").val(item.data.saleStaffId);
                        $("#proposalDetailsUpdate").val(item.data.proposalDetails);
                        $("#totalPriceUpdate").val(item.data.totalPrice);
                        // Chuyển đổi định dạng ngày cho input[type="date"]
                        const responseDate = item.data.responseDate ? new Date(item.data.responseDate).toISOString().split('T')[0] : '';
                        $("#responseDateUpdate").val(responseDate);
                        $("#responseByUpdate").val(item.data.responseBy);
                        $("#statusUpdate").val(item.data.status);
                        $("#noteUpdate").val(item.data.note);
                        $("#createdDateUpdate").val(item.data.createdDate);

                        // Mở modal cập nhật
                        $('#saleModalUpdate').modal('show');
                        loadSaleStaffUpdate(1, item.data.saleStaffId);
                        loadManagerUpdate(0, null);
                        loadBookingRequestsUpdate();
                    } else {
                        alert("Sale not found.");
                    }
                },
                error: function (xhr, error) {
                    console.log(xhr);
                    alert("Failed to load sale.");
                }
            });
        }

        //save update
        $("#btSaveUpdateSale").click(function () {
            var sale = {
                Id: $("#saleId").val(),
                BookingRequestId: $("#bookingRequestIdUpdate").val(),
                SaleStaffId: $("#saleStaffIdUpdate").val(),
                ProposalDetails: $("#proposalDetailsUpdate").val(),
                TotalPrice: $("#totalPriceUpdate").val(),
                Status: parseInt($("#statusUpdate").val()),
                ResponseDate: $("#responseDateUpdate").val(),
                ResponseBy: $("#responseByUpdate").val(),
                Note: $("#noteUpdate").val(),
                CreatedDate: $("#createdDateUpdate").val(),
            };
            console.log(sale);
            $.ajax({
                type: 'PUT',
                url: `https://localhost:7298/api/Sales`,
                data: JSON.stringify(sale),
                contentType: "application/json;charset=utf-8",
                success: function (result) {
                    alert("Sale updated successfully.");
                    $('#saleModalUpdate').modal('hide');
                    loadData(1);
                },
                error: function (xhr, error) {
                    console.log(xhr);
                    alert("Failed to update sale.");
                }
            });
        });

        //nhan btn delete --> sua field isDeleted
        function deleteSale(id) {
            if (confirm("Are you sure you want to delete this sale?")) {
                $.ajax({
                    url: `https://localhost:7298/api/Sales/update-isdeleted/${id}`,
                    type: "PUT",
                    success: function (result) {
                        alert("Sale deleted successfully.");
                        loadData(1);
                    },
                    error: function (xhr, error) {
                        console.log(xhr);
                        alert("Failed to delete the sale.");
                    }
                });
            }
        }

        //load list sale staff add
        function loadSaleStaffAdd(roleNum, saleStaffId) {
            $.ajax({
                url: `https://localhost:7298/api/Users/get-by-role/${roleNum}`,
                type: 'GET',
                success: function (result) {
                    let options = '';
                    $.each(result.data, function (index, staff) {
                        options += `<option value="${staff.id}" >${staff.firstname} ${staff.lastname}</option>`;
                        console.log(options);
                    });
                    $('#saleStaffIdAdd').html(options); // Gán các tùy chọn vào select
                },
                error: function (xhr, error) {
                    console.log(xhr);
                    alert('Failed to load sale staff list.'); // Thông báo khi có lỗi
                }
            });
        }

        //load list sale staff update
        function loadSaleStaffUpdate(roleNum, saleStaffId) {
            $.ajax({
                url: `https://localhost:7298/api/Users/get-by-role/${roleNum}`,
                type: 'GET',
                success: function (result) {
                    let options = '';
                    $.each(result.data, function (index, staff) {
                        const selected = (saleStaffId && staff.id == saleStaffId) ? 'selected' : '';
                        options += `<option value="${staff.id}" ${selected}>${staff.firstname} ${staff.lastname}</option>`;
                        console.log(options);
                    });
                    $('#saleStaffIdUpdate').html(options); // Gán các tùy chọn vào select
                },
                error: function (xhr, error) {
                    console.log(xhr);
                    alert('Failed to load sale staff list.'); // Thông báo khi có lỗi
                }
            });
        }

        //load list manager add
        function loadManagerAdd(roleNum, managerName) {
            $.ajax({
                url: `https://localhost:7298/api/Users/get-by-role/${roleNum}`,
                type: 'GET',
                success: function (result) {
                    let options = '';
                    $.each(result.data, function (index, manager) {
                        options += `<option value="${manager.firstname} ${manager.lastname}">${manager.firstname} ${manager.lastname}</option>`;
                        console.log(options);
                    });
                    $('#responseByAdd').html(options); // Gán các tùy chọn vào select
                },
                error: function (xhr, error) {
                    console.log(xhr);
                    alert('Failed to load manager list.'); // Thông báo khi có lỗi
                }
            });
        }

        //load list manager update
        function loadManagerUpdate(roleNum, managerName) {
            $.ajax({
                url: `https://localhost:7298/api/Users/get-by-role/${roleNum}`,
                type: 'GET',
                success: function (result) {
                    let options = '';
                    $.each(result.data, function (index, manager) {
                        const selected = `${manager.firstname} ${manager.lastname}` === managerName ? 'selected' : '';
                        options += `<option value="${manager.firstname} ${manager.lastname}">${manager.firstname} ${manager.lastname}</option>`;

                    });
                    $('#responseByUpdate').html(options); // Gán các tùy chọn vào select
                },
                error: function (xhr, error) {
                    console.log(xhr);
                    alert('Failed to load manager list.'); // Thông báo khi có lỗi
                }
            });
        }

        //load booking request add
        function loadBookingRequestsAdd() {
            $.ajax({
                type: 'GET',
                url: 'https://localhost:7298/api/BookingRequests/with-no-sale',
                contentType: "application/json;charset=utf-8",
                success: function (rs) {
                    const cardsContainer = $("#bookingRequestCardsAdd");
                    cardsContainer.empty(); // Xóa nội dung cũ
                    rs.data.forEach(bookingRequest => {
                        const card = `
                                <div class="col-md-4">
                                    <div class="card mb-3" data-id="${bookingRequest.id}" style="cursor: pointer;">
                                        <div class="card-body">
                                            <p class="card-text">Customer: ${bookingRequest.customer.firstname} ${bookingRequest.customer.lastname}</p>
                                            <p class="card-text">Travel: ${bookingRequest.travel.name}</p>
                                            <p class="card-text">Quantity: ${bookingRequest.quantityService}</p>
                                            <p class="card-text">Number of Persons: ${bookingRequest.numberOfPerson}</p>
                                        </div>
                                    </div>
                                </div>
                                    `;
                        cardsContainer.append(card);
                    });

                    // Thêm sự kiện click cho mỗi card
                    $(".card").click(function () {
                        const selectedId = $(this).data("id");
                        $("#bookingRequestIdAdd").val(selectedId);
                        console.log(selectedId)
                    });
                },
                error: function (xhr, error) {
                    console.log(xhr);
                    alert('Error occurred while loading booking requests.');
                }
            });
        }

        //load booking request update
        function loadBookingRequestsUpdate() {
            $.ajax({
                type: 'GET',
                url: 'https://localhost:7298/api/BookingRequests/with-no-sale',
                contentType: "application/json;charset=utf-8",
                success: function (rs) {
                    const cardsContainer = $("#bookingRequestCardsUpdate");
                    cardsContainer.empty(); // Xóa nội dung cũ
                    rs.data.forEach(bookingRequest => {
                        const card = `
                                        <div class="col-md-4">
                                            <div class="card mb-3" data-id="${bookingRequest.id}" style="cursor: pointer;">
                                                <div class="card-body">
                                                    <p class="card-text">Customer: ${bookingRequest.customer.firstname} ${bookingRequest.customer.lastname}</p>
                                                    <p class="card-text">Travel: ${bookingRequest.travelName}</p>
                                                    <p class="card-text">Quantity: ${bookingRequest.quantityService}</p>
                                                    <p class="card-text">Number of Persons: ${bookingRequest.numberOfPerson}</p>
                                                </div>
                                            </div>
                                        </div>
                                                `;
                        cardsContainer.append(card);
                    });

                    // Thêm sự kiện click cho mỗi card
                    $(".card").click(function () {
                        const selectedId = $(this).data("id");
                        $("#bookingRequestIdUpdate").val(selectedId);
                        console.log(selectedId)
                    });
                },
                error: function (xhr, error) {
                    console.log(xhr);
                    alert('Error occurred while loading booking requests.');
                }
            });
        }

        // Hàm định dạng ngày thành dd/MM/yyyy
        function formatDate(dateString) {
            if (!dateString) return ''; // Kiểm tra nếu không có ngày
            const date = new Date(dateString);
            const day = String(date.getDate()).padStart(2, '0');
            const month = String(date.getMonth() + 1).padStart(2, '0'); // Tháng bắt đầu từ 0
            const year = date.getFullYear();
            return `${day}/${month}/${year}`;
        }

        //ham dinh dang status
        function getStatusText(status) {
            switch (status) {
                case 0:
                    return "Pending";
                case 1:
                    return "Approved";
                case 2:
                    return "Rejected";
                default:
                    return "Unknown";
            }
        }

        //update phan trang
        function updatePagination(totalPages) {
            $('#currentPageLabel').text("Page " + currentPage);
            $('#prevPage').prop('disabled', currentPage === 1);
            $('#nextPage').prop('disabled', currentPage === totalPages);
        }
    </script>
}